{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[loading,setLoading]=useState(true);const isAuthenticated=!!user&&!!token;// Проверяем токен при загрузке\nuseEffect(()=>{const storedToken=localStorage.getItem('vet_token');if(storedToken){verifyToken(storedToken);}else{setLoading(false);}},[]);const verifyToken=async token=>{try{const response=await fetch('http://localhost:3001/api/auth/verify',{headers:{'Authorization':`Bearer ${token}`}});if(response.ok){setToken(token);// Получаем полные данные профиля\nconst profileResponse=await fetch('http://localhost:3001/api/auth/profile',{headers:{'Authorization':`Bearer ${token}`}});if(profileResponse.ok){const profileData=await profileResponse.json();setUser(profileData);}}else{// Токен недействителен\nlocalStorage.removeItem('vet_token');}}catch(error){console.error('Ошибка проверки токена:',error);localStorage.removeItem('vet_token');}finally{setLoading(false);}};const login=async(email,password)=>{try{const response=await fetch('http://localhost:3001/api/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const data=await response.json();if(!response.ok){throw new Error(data.error||'Ошибка входа в систему');}// Сохраняем токен\nlocalStorage.setItem('vet_token',data.token);setToken(data.token);setUser(data.user);}catch(error){throw new Error(error.message||'Ошибка входа в систему');}};const register=async userData=>{try{const response=await fetch('http://localhost:3001/api/auth/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});const data=await response.json();if(!response.ok){throw new Error(data.error||'Ошибка регистрации');}// Автоматический вход после регистрации\nlocalStorage.setItem('vet_token',data.token);setToken(data.token);setUser(data.user);}catch(error){throw new Error(error.message||'Ошибка регистрации');}};const logout=()=>{localStorage.removeItem('vet_token');setToken(null);setUser(null);};const value={user,token,login,register,logout,loading,isAuthenticated};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","loading","setLoading","isAuthenticated","storedToken","localStorage","getItem","verifyToken","response","fetch","headers","ok","profileResponse","profileData","json","removeItem","error","console","login","email","password","method","body","JSON","stringify","data","setItem","message","register","userData","logout","value","Provider"],"sources":["/Users/pavelgalante/VetFormuLab/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface User {\n  id: number;\n  email: string;\n  clinic_name: string;\n  clinic_phone?: string;\n  clinic_address?: string;\n  contact_person?: string;\n  subscription_type: string;\n  created_at: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (userData: RegisterData) => Promise<void>;\n  logout: () => void;\n  loading: boolean;\n  isAuthenticated: boolean;\n}\n\ninterface RegisterData {\n  email: string;\n  password: string;\n  clinic_name: string;\n  clinic_phone?: string;\n  clinic_address?: string;\n  contact_person?: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const isAuthenticated = !!user && !!token;\n\n  // Проверяем токен при загрузке\n  useEffect(() => {\n    const storedToken = localStorage.getItem('vet_token');\n    if (storedToken) {\n      verifyToken(storedToken);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const verifyToken = async (token: string) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/verify', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        setToken(token);\n        \n        // Получаем полные данные профиля\n        const profileResponse = await fetch('http://localhost:3001/api/auth/profile', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (profileResponse.ok) {\n          const profileData = await profileResponse.json();\n          setUser(profileData);\n        }\n      } else {\n        // Токен недействителен\n        localStorage.removeItem('vet_token');\n      }\n    } catch (error) {\n      console.error('Ошибка проверки токена:', error);\n      localStorage.removeItem('vet_token');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Ошибка входа в систему');\n      }\n\n      // Сохраняем токен\n      localStorage.setItem('vet_token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n\n    } catch (error: any) {\n      throw new Error(error.message || 'Ошибка входа в систему');\n    }\n  };\n\n  const register = async (userData: RegisterData) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Ошибка регистрации');\n      }\n\n      // Автоматический вход после регистрации\n      localStorage.setItem('vet_token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n\n    } catch (error: any) {\n      throw new Error(error.message || 'Ошибка регистрации');\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('vet_token');\n    setToken(null);\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    token,\n    login,\n    register,\n    logout,\n    loading,\n    isAuthenticated\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}