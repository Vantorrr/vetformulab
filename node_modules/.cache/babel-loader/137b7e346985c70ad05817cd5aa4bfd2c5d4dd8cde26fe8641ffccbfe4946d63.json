{"ast":null,"code":"var _jsxFileName = \"/Users/pavelgalante/VetFormuLab/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const isAuthenticated = !!user && !!token;\n\n  // Проверяем токен при загрузке\n  useEffect(() => {\n    const storedToken = localStorage.getItem('vet_token');\n    if (storedToken) {\n      verifyToken(storedToken);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const verifyToken = async token => {\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/verify', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setToken(token);\n\n        // Получаем полные данные профиля\n        const profileResponse = await fetch('http://localhost:3001/api/auth/profile', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (profileResponse.ok) {\n          const profileData = await profileResponse.json();\n          setUser(profileData);\n        }\n      } else {\n        // Токен недействителен\n        localStorage.removeItem('vet_token');\n      }\n    } catch (error) {\n      console.error('Ошибка проверки токена:', error);\n      localStorage.removeItem('vet_token');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Ошибка входа в систему');\n      }\n\n      // Сохраняем токен\n      localStorage.setItem('vet_token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n    } catch (error) {\n      throw new Error(error.message || 'Ошибка входа в систему');\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Ошибка регистрации');\n      }\n\n      // Автоматический вход после регистрации\n      localStorage.setItem('vet_token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n    } catch (error) {\n      throw new Error(error.message || 'Ошибка регистрации');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('vet_token');\n    setToken(null);\n    setUser(null);\n  };\n  const value = {\n    user,\n    token,\n    login,\n    register,\n    logout,\n    loading,\n    isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","loading","setLoading","isAuthenticated","storedToken","localStorage","getItem","verifyToken","response","fetch","headers","ok","profileResponse","profileData","json","removeItem","error","console","login","email","password","method","body","JSON","stringify","data","setItem","message","register","userData","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pavelgalante/VetFormuLab/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport config from '../config';\n\ninterface User {\n  id: number;\n  email: string;\n  clinic_name: string;\n  clinic_phone?: string;\n  clinic_address?: string;\n  contact_person?: string;\n  subscription_type: string;\n  created_at: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (userData: RegisterData) => Promise<void>;\n  logout: () => void;\n  loading: boolean;\n  isAuthenticated: boolean;\n}\n\ninterface RegisterData {\n  email: string;\n  password: string;\n  clinic_name: string;\n  clinic_phone?: string;\n  clinic_address?: string;\n  contact_person?: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const isAuthenticated = !!user && !!token;\n\n  // Проверяем токен при загрузке\n  useEffect(() => {\n    const storedToken = localStorage.getItem('vet_token');\n    if (storedToken) {\n      verifyToken(storedToken);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const verifyToken = async (token: string) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/verify', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        setToken(token);\n        \n        // Получаем полные данные профиля\n        const profileResponse = await fetch('http://localhost:3001/api/auth/profile', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (profileResponse.ok) {\n          const profileData = await profileResponse.json();\n          setUser(profileData);\n        }\n      } else {\n        // Токен недействителен\n        localStorage.removeItem('vet_token');\n      }\n    } catch (error) {\n      console.error('Ошибка проверки токена:', error);\n      localStorage.removeItem('vet_token');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Ошибка входа в систему');\n      }\n\n      // Сохраняем токен\n      localStorage.setItem('vet_token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n\n    } catch (error: any) {\n      throw new Error(error.message || 'Ошибка входа в систему');\n    }\n  };\n\n  const register = async (userData: RegisterData) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Ошибка регистрации');\n      }\n\n      // Автоматический вход после регистрации\n      localStorage.setItem('vet_token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n\n    } catch (error: any) {\n      throw new Error(error.message || 'Ошибка регистрации');\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('vet_token');\n    setToken(null);\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    token,\n    login,\n    register,\n    logout,\n    loading,\n    isAuthenticated\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}