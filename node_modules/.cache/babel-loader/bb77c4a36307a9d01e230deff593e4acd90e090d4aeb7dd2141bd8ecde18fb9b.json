{"ast":null,"code":"var _jsxFileName = \"/Users/pavelgalante/VetFormuLab/frontend/src/components/LoadingSplash.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSplash = ({\n  onLoadingComplete\n}) => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [loadingText, setLoadingText] = useState('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');\n  useEffect(() => {\n    const texts = ['–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...', '–ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –∫–æ—Ä–º–æ–≤...', '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤...', '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...', '–ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!'];\n    let currentTextIndex = 0;\n    let progressValue = 0;\n    const interval = setInterval(() => {\n      progressValue += Math.random() * 25 + 10;\n      if (progressValue > 100) {\n        progressValue = 100;\n        clearInterval(interval);\n        setTimeout(() => {\n          onLoadingComplete();\n        }, 1000);\n      }\n      setProgress(progressValue);\n      if (currentTextIndex < texts.length - 1 && progressValue > (currentTextIndex + 1) * 20) {\n        currentTextIndex++;\n        setLoadingText(texts[currentTextIndex]);\n      }\n    }, 300);\n    return () => clearInterval(interval);\n  }, [onLoadingComplete]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-splash\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-animation\",\n      children: \"\\uD83D\\uDC3E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-text\",\n      children: \"VetFormuLab\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-subtitle\",\n      style: {\n        color: 'rgba(255, 255, 255, 0.8)',\n        fontSize: '1.2rem',\n        marginBottom: '3rem',\n        fontWeight: 300\n      },\n      children: \"\\u0421\\u0438\\u0441\\u0442\\u0435\\u043C\\u0430 \\u0440\\u0430\\u0441\\u0447\\u0435\\u0442\\u0430 \\u043A\\u043E\\u0440\\u043C\\u043E\\u0432 \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u043F\\u043E\\u043A\\u043E\\u043B\\u0435\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-progress\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'rgba(255, 255, 255, 0.9)',\n        fontSize: '1rem',\n        marginTop: '2rem',\n        fontWeight: 400,\n        textAlign: 'center'\n      },\n      children: loadingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'rgba(255, 255, 255, 0.6)',\n        fontSize: '0.9rem',\n        marginTop: '1rem',\n        textAlign: 'center'\n      },\n      children: [Math.round(progress), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        pointerEvents: 'none'\n      },\n      children: [...Array(20)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          width: '4px',\n          height: '4px',\n          background: 'rgba(255, 255, 255, 0.6)',\n          borderRadius: '50%',\n          left: `${Math.random() * 100}%`,\n          top: `${Math.random() * 100}%`,\n          animation: `float ${3 + Math.random() * 2}s ease-in-out infinite`,\n          animationDelay: `${Math.random() * 2}s`\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingSplash, \"HZjKV/29WLamkHyChl1cn65hHQk=\");\n_c = LoadingSplash;\nexport default LoadingSplash;\nvar _c;\n$RefreshReg$(_c, \"LoadingSplash\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LoadingSplash","onLoadingComplete","_s","progress","setProgress","loadingText","setLoadingText","texts","currentTextIndex","progressValue","interval","setInterval","Math","random","clearInterval","setTimeout","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontSize","marginBottom","fontWeight","width","marginTop","textAlign","round","position","top","left","height","overflow","pointerEvents","Array","map","_","i","background","borderRadius","animation","animationDelay","_c","$RefreshReg$"],"sources":["/Users/pavelgalante/VetFormuLab/frontend/src/components/LoadingSplash.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface LoadingSplashProps {\n  onLoadingComplete: () => void;\n}\n\nconst LoadingSplash: React.FC<LoadingSplashProps> = ({ onLoadingComplete }) => {\n  const [progress, setProgress] = useState(0);\n  const [loadingText, setLoadingText] = useState('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');\n\n  useEffect(() => {\n    const texts = [\n      '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...',\n      '–ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –∫–æ—Ä–º–æ–≤...',\n      '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤...',\n      '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...',\n      '–ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!'\n    ];\n\n    let currentTextIndex = 0;\n    let progressValue = 0;\n\n    const interval = setInterval(() => {\n      progressValue += Math.random() * 25 + 10;\n      \n      if (progressValue > 100) {\n        progressValue = 100;\n        clearInterval(interval);\n        setTimeout(() => {\n          onLoadingComplete();\n        }, 1000);\n      }\n\n      setProgress(progressValue);\n      \n      if (currentTextIndex < texts.length - 1 && progressValue > (currentTextIndex + 1) * 20) {\n        currentTextIndex++;\n        setLoadingText(texts[currentTextIndex]);\n      }\n    }, 300);\n\n    return () => clearInterval(interval);\n  }, [onLoadingComplete]);\n\n  return (\n    <div className=\"loading-splash\">\n      <div className=\"logo-animation\">\n        üêæ\n      </div>\n      \n      <div className=\"loading-text\">\n        VetFormuLab\n      </div>\n      \n      <div className=\"loading-subtitle\" style={{\n        color: 'rgba(255, 255, 255, 0.8)',\n        fontSize: '1.2rem',\n        marginBottom: '3rem',\n        fontWeight: 300\n      }}>\n        –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—Ä–º–æ–≤ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è\n      </div>\n      \n      <div className=\"loading-bar\">\n        <div \n          className=\"loading-progress\" \n          style={{ width: `${progress}%` }}\n        />\n      </div>\n      \n      <div style={{\n        color: 'rgba(255, 255, 255, 0.9)',\n        fontSize: '1rem',\n        marginTop: '2rem',\n        fontWeight: 400,\n        textAlign: 'center'\n      }}>\n        {loadingText}\n      </div>\n      \n      <div style={{\n        color: 'rgba(255, 255, 255, 0.6)',\n        fontSize: '0.9rem',\n        marginTop: '1rem',\n        textAlign: 'center'\n      }}>\n        {Math.round(progress)}%\n      </div>\n\n      {/* Particles animation */}\n      <div style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        pointerEvents: 'none'\n      }}>\n        {[...Array(20)].map((_, i) => (\n          <div\n            key={i}\n            style={{\n              position: 'absolute',\n              width: '4px',\n              height: '4px',\n              background: 'rgba(255, 255, 255, 0.6)',\n              borderRadius: '50%',\n              left: `${Math.random() * 100}%`,\n              top: `${Math.random() * 100}%`,\n              animation: `float ${3 + Math.random() * 2}s ease-in-out infinite`,\n              animationDelay: `${Math.random() * 2}s`\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSplash; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}